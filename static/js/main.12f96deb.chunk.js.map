{"version":3,"sources":["AppContext.js","containers/Form.js","containers/ToDo.js","containers/PanelInfo.js","App.js","index.js"],"names":["AppContext","createContext","AppProvider","children","useReducer","tasks","action","type","task","id","title","description","priority","onCreateDate","idx","Boolean","find","newIdx","Math","floor","random","checkId","newTasksTab","filter","handleDelete","data","Error","localData","localStorage","getItem","JSON","parse","dispatch","useEffect","setItem","stringify","Provider","value","Form","useContext","useState","textTask","setTextTask","textareaTask","setTextareaTask","isPriority","setIsPriority","notEnoughLetters","setNotEnoughLetter","clickedPlus","setClickedPlus","sizeOfWindow","window","matchMedia","handleAllValue","e","name","target","checked","styleOfWarning","opacity","fontSize","color","transition","notEnoughLettersWarning","p","initial","animate","variants","hidden","visible","style","plusStyle","display","containerFormStyle","matches","console","log","className","onClick","placeholder","onChange","preventDefault","newId","Date","toLocaleString","length","Todo","handlerDelButton","onClickDate","setOnClickDate","styleTitle","textAlign","textDecoration","important","isTaskDone","onCreateDateInfo","descriptionInfo","onTaskClickDate","PanelInfo","tasksList","map","ToDo","key","panelInfoContainer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12f96deb.chunk.js","sourcesContent":["import React, { createContext, useEffect, useReducer } from 'react';\r\n\r\nexport const AppContext = createContext();\r\n\r\nconst ADD = 'ADD';\r\nconst DELETE = 'DELETE';\r\nconst FETCH = 'FETCH';\r\n\r\n// The main array\r\nconst allTasks = [];\r\n\r\n// Function checks whether the given {id} from Form exists.\r\nconst checkId = (tasks, action) => {\r\n   const { id, title, description, priority, onCreateDate } = action.task;\r\n\r\n   const idx = id;\r\n   const isTheSameId = Boolean(tasks.find(task => task.id === idx));\r\n\r\n   if (isTheSameId) {\r\n      // Creating new Id\r\n      const newIdx = Math.floor(Math.random() * 99999999999) + title;\r\n\r\n      action.task = {\r\n         id: newIdx,\r\n         title,\r\n         description,\r\n         priority,\r\n         onCreateDate,\r\n      }\r\n\r\n      return [...tasks, action.task];\r\n   }\r\n\r\n   else {\r\n      return [...tasks, action.task];\r\n   }\r\n\r\n}\r\n\r\n// Function delete task by id\r\nconst handleDelete = (tasks, action) => {\r\n   const newTasksTab = tasks.filter(task => task.id !== action);\r\n   return [...newTasksTab];\r\n}\r\n\r\n\r\nconst AppProvider = ({ children }) => {\r\n   const tasksReducer = (tasks, action) => {\r\n\r\n      switch (action.type) {\r\n         case ADD:\r\n            return checkId(tasks, action);\r\n         case DELETE:\r\n            return handleDelete(tasks, action.id);\r\n         case FETCH:\r\n            return action.data;\r\n         default:\r\n            throw new Error(\"Nie znaleziono akcji w coursesReducer\")\r\n      }\r\n\r\n   }\r\n\r\n   const [tasks, dispatch] = useReducer(tasksReducer, [], () => {\r\n      const localData = localStorage.getItem('tasks');\r\n      return localData ? JSON.parse(localData) : [];\r\n   });\r\n\r\n   // useEffect(() => {\r\n   //    dispatch({ type: FETCH, data: allTasks })\r\n   // }, [])\r\n\r\n   //Download value\r\n   useEffect(() => {\r\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks))\r\n   }, [tasks]);\r\n\r\n   return (\r\n      <AppContext.Provider value={{\r\n         tasks,\r\n         dispatch\r\n      }}>\r\n         {children}\r\n      </AppContext.Provider>\r\n   );\r\n}\r\n\r\nexport default AppProvider;","import { motion } from \"framer-motion\";\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { AppContext } from '../AppContext';\r\n// Animation and stylea\r\nimport '../main-styles/main.scss';\r\n\r\nconst Form = () => {\r\n   // eslint-disable-next-line\r\n   const { tasks, dispatch } = useContext(AppContext);\r\n\r\n   // Value from Formnpm\r\n   const [textTask, setTextTask] = useState(\"\");\r\n   const [textareaTask, setTextareaTask] = useState(\"\");\r\n   const [isPriority, setIsPriority] = useState(false);\r\n\r\n   // Value for warning\r\n   const [notEnoughLetters, setNotEnoughLetter] = useState(false);\r\n   const [clickedPlus, setClickedPlus] = useState(false);\r\n   const sizeOfWindow = window.matchMedia('(max-width: 400px)');\r\n\r\n   // Handling the form \r\n   const handleAllValue = (e) => {\r\n      const name = e.target.name;\r\n      const value = e.target.value;\r\n      const checked = e.target.checked;\r\n\r\n      if (name === 'textTask') {\r\n         setTextTask(value);\r\n      } else if (name === 'textareaTask') {\r\n         setTextareaTask(value)\r\n      } else if (name === 'isPriority') {\r\n         setIsPriority(checked);\r\n      } else {\r\n         throw Error(\"Error in handleAllValue, in Form.js\")\r\n      }\r\n\r\n   }\r\n\r\n   // Handling creating a new task - transmission to the context\r\n   const handleAllForm = (e) => {\r\n      e.preventDefault();\r\n\r\n      // ID drawing\r\n      const newId = Math.floor(Math.random() * 999999999999999999) + textTask;\r\n\r\n      // Get a creating date\r\n      const onCreateDate = new Date().toLocaleString();\r\n\r\n      // Test length of title/textTask\r\n      if (textTask.length < 5) {\r\n         setNotEnoughLetter(true);\r\n         return;\r\n      } else {\r\n         setNotEnoughLetter(false)\r\n      }\r\n\r\n      let task = {\r\n         id: newId,\r\n         title: textTask,\r\n         description: textareaTask,\r\n         priority: isPriority,\r\n         onCreateDate,\r\n      }\r\n\r\n      dispatch({\r\n         task,\r\n         type: 'ADD'\r\n      });\r\n\r\n      // Reset Value on Form\r\n      setTextTask(\"\");\r\n      setTextareaTask(\"\");\r\n      setIsPriority(isPriority => isPriority = false);\r\n      if(sizeOfWindow.matches) setClickedPlus(false);\r\n      console.log(sizeOfWindow.matches);\r\n   }\r\n\r\n   const styleOfWarning = {\r\n      opacity: notEnoughLetters ? '1' : '0',\r\n      fontSize: '0.65rem',\r\n      color: '#ff3636',\r\n      transition: 'opacity 1s easy-out'\r\n   }\r\n\r\n   const variants = {\r\n      hidden: { opacity: 0 },\r\n      visible: { opacity: 1 }\r\n   }\r\n\r\n   const notEnoughLettersWarning = notEnoughLetters && <motion.p initial=\"hidden\" animate=\"visible\" variants={variants} style={styleOfWarning}>The minimum text length is 5 characters</motion.p>;\r\n\r\n   const plusStyle = {\r\n      display: clickedPlus ? 'none' : 'block',\r\n   }\r\n\r\n   const containerFormStyle = {\r\n      display: clickedPlus ? 'block' : 'none'\r\n   }\r\n\r\n   const handleContainerToggle = () => {\r\n      setClickedPlus(true);\r\n   }\r\n\r\n \r\n\r\n   useEffect(() => {\r\n      if (sizeOfWindow.matches) {\r\n         setClickedPlus(false)\r\n      } else {\r\n         setClickedPlus(true)\r\n      }\r\n      console.log(sizeOfWindow.matches);\r\n\r\n   }, []);\r\n\r\n\r\n   return (\r\n      <div className=\"App_creatorTask\">\r\n         <h2 className=\"App_creatorTask--title\">Create new task</h2>\r\n\r\n         <p className=\"App_creatorTask--plus\" onClick={handleContainerToggle} style={plusStyle}>+</p>\r\n\r\n         <div className=\"App_creatorTask--containerForm\" style={containerFormStyle}>\r\n            <input\r\n               className=\"App_creatorTask--input\"\r\n               type=\"text\"\r\n               placeholder=\"What do you want to do?\"\r\n               name=\"textTask\"\r\n               value={textTask}\r\n               onChange={handleAllValue}\r\n            />\r\n\r\n            {notEnoughLettersWarning}\r\n\r\n            <input\r\n               className=\"App_creatorTask--input\"\r\n               type=\"textarea\"\r\n               placeholder=\"Describe (optional)\"\r\n               name=\"textareaTask\"\r\n               value={textareaTask}\r\n               onChange={handleAllValue}\r\n            />\r\n\r\n            <p className=\"App_creatorTask--paragraph\">Priority?\r\n         <input\r\n                  className=\"App_creatorTask--paragraph--input\"\r\n                  type=\"checkbox\"\r\n                  name=\"isPriority\"\r\n                  checked={isPriority}\r\n                  onClick={handleAllValue}\r\n\r\n               />\r\n            </p>\r\n\r\n            <button\r\n               className=\"App_creatorTask--button\"\r\n               onClick={handleAllForm}\r\n            >\r\n               Create\r\n         </button>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Form;","import React, { useState } from 'react';\r\n\r\nconst Todo = ({ task, handlerDelButton }) => {\r\n   const [onClickDate, setOnClickDate] = useState();\r\n\r\n   // Checking whether the task exist\r\n   if (!task) return;\r\n\r\n   const { id, title, description, priority, onCreateDate } = task;\r\n\r\n   const handleDeleteTask = () => handlerDelButton({\r\n      id,\r\n      type: 'DELETE'\r\n   });\r\n\r\n   const styleTitle = {\r\n      textAlign: 'left',\r\n      color: priority ? 'rgb(255, 54, 54)' : 'white',\r\n      textDecoration: onClickDate ? 'line-through' : null,\r\n   }\r\n\r\n   const important = priority ? '!!! ' : null;\r\n\r\n   // Creating finish date and handle toggle\r\n   const handleTaskDone = () => {\r\n      const onTaskClickDate = new Date().toLocaleString();\r\n      onClickDate ? setOnClickDate(\"\") : setOnClickDate(onTaskClickDate);\r\n   }\r\n\r\n   const isTaskDone = onClickDate ? <p className=\"App_panelInfo--task--date--finish\">Finished: {onClickDate}</p> : null;\r\n\r\n   const onCreateDateInfo = <p className=\"App_panelInfo--task--createDate\">{onCreateDate}</p>\r\n\r\n   const descriptionInfo = <p className=\"App_panelInfo--task--description\">{description}</p>\r\n\r\n   return (\r\n      <>\r\n         <div className=\"App_panelInfo--task\">\r\n            {onCreateDateInfo}\r\n            <div className=\"App_panelInfo--task--maincontainer\">\r\n               <div className=\"App_panelInfo--task--container\">\r\n\r\n                  <p\r\n                     className=\"App_panelInfo--task--text\"\r\n                     style={styleTitle}\r\n                     onClick={handleTaskDone}\r\n                  >\r\n                     {important}{title}\r\n                  </p>\r\n                  {descriptionInfo}\r\n                  {isTaskDone}\r\n               </div>\r\n\r\n               <button\r\n                  className=\"App_panelInfo--task--button\"\r\n                  onClick={handleDeleteTask}>\r\n                  x\r\n               </button>\r\n            </div>\r\n         </div>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default Todo;","import React, { useContext } from 'react';\r\nimport { AppContext } from '../AppContext';\r\n// Styles\r\nimport '../main-styles/main.scss';\r\n// Components\r\nimport ToDo from \"./ToDo\";\r\n\r\n\r\nconst PanelInfo = () => {\r\n   const { tasks, dispatch } = useContext(AppContext);\r\n\r\n   const tasksList = tasks.map(task => <ToDo handlerDelButton={dispatch} task={task} key={task.id} />);\r\n\r\n   const panelInfoContainer = <div className=\"App_panelInfo\"><p className=\"App_panelInfo--info\">Click on the title to strike out the task</p>{tasksList}</div>;\r\n\r\n   return (\r\n\r\n      <>\r\n         {tasksList.length ? panelInfoContainer : null}\r\n      </>\r\n\r\n   );\r\n}\r\n\r\nexport default PanelInfo;","import React from 'react';\n// PROVIDER\nimport AppProvider from './AppContext';\n// COMPONENTS\nimport Form from './containers/Form';\nimport PanelInfo from './containers/PanelInfo';\n// STYLES\nimport './main-styles/main.scss';\n\n\nfunction App() {\n  \n   return (\n      <AppProvider>\n         <div className=\"App\">\n            <h1 className=\"App_title\">To do application</h1>\n            <div className=\"App_containers\">\n               <Form />\n               <PanelInfo />\n            </div>\n         </div>\n      </AppProvider>\n   );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}